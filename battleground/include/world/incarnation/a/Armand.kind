/**
* Воплощение воина с именем Арманд.
*
* # Два и более пробела - признак начала нового предиката. Т.о. можно уйти
*   от кавычек.
*/
@Warrior

Арманд  @armand

    Воин Арманд.




    // характеристика, инициация, ограничения - в одном блоке
    .. {
        координата   @coord      0 0
        меч          @sword      +
        лук          @bow        +
        колчан       @quiver     +
        направление  @direction  0    [0 360]
        скорость     @velocity   1    >0
        // у этой характеристики есть модификатор
        устойчивость _  @stability  0.9  [0 1]
    }




    // стратегии
    ... {

        Выстрел  @Shoot

            Из лука  @Bow {

                // входящие параметры
                собственная координата  @selfCoord  coord
                цель                    @target     coord
                колчан                  @quiver     kind Quiver

                // внутренние переменные
                направление выстрела             @direction  direction  0 0 0
                скорость выстрела                @velocity   number     0
                скорость и направление выстрела  @vd         vector     0 0 0


                // указанное здесь время добавится ко времени выполнения
                // стратегии колчана "Отдать стрелу"
                Взять стрелу из колчана  @TakeArrowFromQuiver  1 s
                    колчан
                        ? количество стрел == 0
                            // нет стрел, стратегия прекращена
                            !
                        // выполняется стратегия колчана
                        Отдать стрелу
                        // внутри этой стратегии воплощённая стрела становится
                        // доступна по имени, определённому в стратегии колчана

                Натянуть тетиву  @Nock  2 s
                    // меняется линейно от 0 до 50 м/с
                    скорость выстрела  0..50

                Прицелиться  @Aim  2 s
                    направление выстрела  цель - собственная координата

                Выпустить стрелу  @HaveShot  0.1 s
                    // обращаемся к стреле, воплощённой при выполнении
                    // стратегии колчана "Отдать стрелу"
                    стрела
                        скорость  скорость выстрела * направление выстрела


                strategy MarkovProcess
                    Взять стрелу из колчана
                        Натянуть тетиву

                    Натянуть тетиву
                        Прицелиться

                    Прицелиться
                        Выпустить стрелу

                    Выпустить стрелу
                        .
            }




        Движение  @Move
        
            Шагом  @Walk
            
                В заданном направлении  @Direction {
                
                    // входящие параметры
                    вектор направления  @directionVector  direction
                    расстояние          @distance         number
                    
                    // внутренние переменные
                    пройденное расстояние  @completeDistance  0
                    последнее перемещение  @lastMove          0 0 0
                    
                    
                    Переместиться  @Go  1 s
                        последнее перемещение  скорость * dt * вектор направления
                        координата             += последнее перемещение
                        пройденное расстояние  += |последнее перемещение|
                
                
                    strategy MarkovProcess
                        Переместиться
                            ? пройденное расстояние >= расстояние
                                .
                            Переместиться
                }

                
        

        Тренировка  @Training

            С одноручным мечом  @SingleSword
            
                Вращение меча  @Turn {
                
                    // входящий параметр
                    длительность тренировки  @durationTraining
                    
                    
                    // все встречаемые в стратегии действия, их код,
                    // длительность и как они меняют характеристики
                    // по мере своего выполнения
                    // # Действия идут в алфавитном порядке.
                    В боевую стойку      @IntoCombatPosition  1 s
                        // зачение модификатора меняется линейно до 2 по мере
                        // достижения действия
                        _устойчивость  0 *..2
                    
                    В вольную стойку     @IntoFreePosition    1 s
                        _устойчивость  0 *..1
                    
                    Вращает меч          @TurnSword           1 s
                        // значение модификатора становится 1.9 сразу и до
                        // конца выполнения действия; по завершению,
                        // возвращается значение модификатора на начало
                        // вполнения этого действия
                        _устойчивость  0 (1.9)
                    
                    Ожидает              @Wait                2-5 s
                        // никаких изменений не происходит
                    
                    Подымает меч         @PickUpSword         3-5 s
                        // зачение модификатора меняется линейно до 0.5 по мере
                        // достижения действия; по завершению, возвращается то,
                        // что было на начало выполнения этого действия
                        _устойчивость  0 (*..0.5)
                        // меч появляется в руках у воина
                        меч  +
                    
                    Решает вращать меч   @DecisionTurnSword
                    
                    Роняет меч           @PlunkSword
                        меч  -
                    
                    Ругается             @Swear               1 s
                    
                    Сосредотачивается    @Concentrate         4-5 s
                    
                    
                    // собственно сама стратегия
                    // # Здесь стратегия задана в виде Марковского процесса.
                    // # Вероятности задаются в % (чтобы упростить запись).
                    // # Сумма вероятностей в одном блоке должна быть 100%.
                    // # Вероятности в блоке действий могут не задаваться.
                    //   Тогда в. распределяются по д. равномерно. См. согл.
                    //   для условия ниже.
                    strategy MarkovProcess
                    
                        В боевую стойку
                            25  Ожидает
                            75  Сосредотачивается
                            
                        В вольную стойку
                            // выполнение стратегии завершено
                            .
                            
                        Вращает меч
                            // продолжает вращать мечом
                            90  Вращает меч
                            // есть небольшая вероятность, что не удержит меч
                            // при выполнении этого упражнения
                            2   Роняет меч
                            // завершает цикл вращений
                            8   В боевую стойку
                            
                        Ожидает
                            // # Для условия может не указываться вероятность,
                            //   если проверку этого условия надо гарантировать.
                            //   Если условие выполняется, вальдо выполняет блок
                            //   внутри условия вместо вероятностных блоков ниже.
                            ? duration > длительность тренировки
                                В вольную стойку
                            40 Ожидает
                            60 Сосредотачивается
                                    
                        Подымает меч
                            В боевую стойку
                        
                        Решает вращать меч
                            Вращает меч
                            
                        Роняет меч
                            // после ругательств выполнение возвращается снова
                            // к "Роняет меч"; ругательства могут продолжиться
                            // (вероятность = 1/2, см. соглашение выше)
                            // # Звено-бумеранг - звено, которое после отработки
                            //   возвращает вальдо на начало д., вызвавшего
                            //   бумеранг.
                            Ругается  <
                            Подымает меч
                            
                        Сосредотачивается
                            // может пожелать сосредоточиться глубже
                            20  Сосредотачивается
                            80  Решает вращать меч
                }
                
        
        
        
        // # Слушатели событий.
        // # Каждый слушатель определяет стратегии, которые начнёт выполнять
        //   элемент при наступлении события.
        Listen {
            Keyboard
                Down  Arrow right
                    Движение / Шагом / В заданном направлении
                        вектор направления  1 0 0
                        расстояние 2
                        
                Down  Arrow down
                    Движение / Шагом / В заданном направлении
                        вектор направления  0 -1 0
                        расстояние 2
                
                Down  Space
                    Выстрел / Из лука
                        собственная координата  координата
                        цель                    mouse.x mouse.y 0..2
                        колчан                  self
                        
                // ...
        }
    }




    // визуальный образ
    visual image {
    
        Тренировка

            С одноручным мечом
            
                Вращение меча
                
                    В боевую стойку {
                    
                        // подготовка составных спрайтов для более простого
                        // их использования ниже
                        Воин без меча  @WarriorWithoutSword
                            +  Основа    @Base    library/dc/player/base/human_f.png
                            +  Тело      @Body    library/dc/player/body/chainmail3.png
                            +  Ноги      @Legs    library/dc/player/legs/leg_armor02.png
                            +  Ботинки   @Boots   library/dc/player/boots/long_white.png
                            +  Перчатки  @Gloves  library/dc/player/gloves/glove_white.png
                        
                        // действие начинается
                        start
                            // из каких частей состоит спрайт - объединение
                            // # Если перед названием пусто, перед отображением
                            //   спрайта холст для его рисования очищается
                            Воин без меча
                            // появляется только если у воина есть меч
                            ? меч true
                                +  Меч в готовности  @SwordReady  library/dc/player/hand1/boromir.png
                        
                        // действие продолжается
                        continue
                            // прошлое действие из спрайта убирается
                            -  Действие продолжается  @ActionProgress
                                *
                            // выбор спрайта зависит от состояния
                            | progress > 0.9
                                // новый образ добавляется в спрайт
                                +  Действие продолжается
                                    90%  @ActionProgress90  library/dc/misc/mdam_lightly_damaged.png
                            | progress > 0.7
                                +  Действие продолжается
                                    70%  @ActionProgress70  library/dc/misc/mdam_moderately_damaged.png
                            | progress > 0.5
                                +  Действие продолжается
                                    50%  @ActionProgress50  library/dc/misc/mdam_heavily_damaged.png
                            | progress > 0.3
                                +  Действие продолжается
                                    30%  @ActionProgress30  library/dc/misc/mdam_severely_damaged.png
                            |
                                +  Действие продолжается
                                    10%  @ActionProgress10  library/dc/misc/mdam_almost_dead.png
                        
                        // действие завершено
                        complete
                            // убираем из спрайта индикатор
                            -  Действие продолжается
                                *
                    }

                    В вольную стойку {
                    
                        start
                            // любой образ
                            *
                        
                        continue
                            *
                        
                        complete
                            Воин без меча
                            ? меч true
                                +  Меч вверх  library/dc/player/hand1/great_sword_slant.png
                    }
                                
                    Вращает меч {
                    
                        start
                            Воин без меча
                            ? меч true
                                +  Меч вверх
                        
                        continue
                            ? меч true
                                // бесконечное чередование спрайтов через заданный
                                // промежуток времени, с
                                || 0.25
                                    +  Меч в готовности
                                    +  Меч вверх
                        
                        complete
                            // соотв. образу, заданному при старте
                            start
                    }
    }

    

    
    // видовая память
    // # Эта память хранит стратегии, которые выполняются всегда. Например,
    //   воин - дышит, поле битвы - проверяет, чтобы ни один элемент
    //   не нарушил правила игры (законы "Поля битвы").
    kind memory {
        
    }
    
    
    
    
    // кратковременная память
    // # Хранит стратегии, выполняющиеся в данный момент времени.
    short term memory {
        // сколько стратегий может выполняться одновременно
        size  5
    }
    
    
    
    
    // оперативная память
    // # Хранит информацию для быстрого взаимодействия с миром.
    prompt memory {
        
    }
    
    
    
    
    // долговременная память
    // # Хранит информацию и стратегии для взаимодействия с миром.
    long term memory {
        
    }
